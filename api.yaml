swagger: "2.0"
tags: 
  name: User, Url
info:
  title: Url Shortener APIs
  description: This project is a URL shortener that allows users to shorten long URLs into shorter ones.
  version: 1.0
  contact:
    email: Example@gmail.com
  license:
    name: license
    url: "http://license.ogr/"
  servers:
    -url: "http://localhost:8000"
    description: This is the local servers
  -url: "https://codeial-gu73.onrender.com"
description: This is the cloud server
schemes: [https, http]

# Define security definitions for bearer token
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    description: Paste Your Token Like This 'Bearer Your Login Token'
    in: header

# APIs
paths:
  #Register User
  /api/user/register:
    post:
      tags: [User]
      summary: This Api is for user sign-up
      description: Pass the username, email and password to create an account.

      #Request Body
      produces:
        - application/json
      consumes:
        - application/json  
      parameters:
        - in: body
          name: User Registration
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
            example:
              username: user1
              email: user1@gmail.com
              password: "123"   

      #Response Body  
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:  #Defining the type of each properties of an object
              status:
                type: string
              message:
                type: string
            example:
              status: success
              message: user registered successfully
        409:
          description: Conflict
          schema:
            type: object
            example:
              status: failed
              message: email already exists!
        400:
          description: Bad Request
          schema:
            type: object
            example:
              status: failed
              message: All fields are required
        500:
          description: Internal Server Error
          schema:
            type: object
            example:
              status: failed
              message: Unable To Register

  #Login User
  /api/user/login:
    post:
      tags: [User]
      summary: This Api is for user login.
      description: Pass email and password to login to the account.

      #Request Body
      produces:
        - application/json
      consumes:
        - application/json  
      parameters:
        - in: body
          name: User Login
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            example:
              email: user1@gmail.com
              password: "123"

      #Response Body  
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:  #Defining the type of each properties of an object
              status:
                type: string
              message:
                type: string
              data:
                type: object
              token:
                type: string    
            example:
              status: success
              message: sign in Successful
              data:
                {
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c,
                }
        401:
          description: Unauthorized
          schema:
            type: object
            example:
              status: failed
              message: Invalid credentials!
        400:
          description: Bad Request
          schema:
            type: object
            example:
              status: failed
              message: All fields are required
        500:
          description: Internal Server Error
          schema:
            type: object
            example:
              message: Internal Server Error.

  /api/user/update/{userId}:
    put:
      tags: [User]
      summary: This Api is to update username.
      description: Pass email and password to login to the account.

      #Request Body
      produces:
        - application/json
      consumes:
        - application/json  
      parameters:
        - in: body
          name: User Update
          schema:
            type: object
            properties:
              username:
                type: string
            example:
              username: Vivek@123

        - in: path  
          name: userId
          schema:
            type: string
            properties:
              userId: string
            example: 
              userId: 65a8bb83bb0175a541606615     

      #Response Body  
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:  #Defining the type of each properties of an object
              status:
                type: string
              message:
                type: string 
            example:
              status: success
              message: User Updated Successfully            

#Shorten Url
  /api/url/shorten:
    post:
      tags: [Url]
      summary: This Api is to create shorten url.
      description: Pass the complex url as 'originalUrl' from body and the token from header

      #Request Body
      produces:
        - application/json
      consumes:
        - application/json  
      parameters:
        - in: body
          name: Shorten Url
          schema:
            type: https
            properties:
              originalUrl:
                type: string
            example:
              originalUrl: https://www.istockphoto.com/photo/lord-ganesha-ganesha-festival-lord-ganesha-on-colorful-background-gm1262197191-369315935?utm_source=pixabay&utm_medium=affiliate&utm_campaign=SRP_image_sponsored&utm_content=https%3A%2F%2Fpixabay.com%2Fimages%2Fsearch%2Fgod%2F&utm_term=god

      # Security definition for the bearer token
      security:
        - BearerAuth: []

      # Response Body
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              status:
                type: string
              originalUrl:
                type: string
              shortedUrl:
                type: string  
            example:
              status: success
              originalUrl: https://www.google.com/search?q=inurl%3A%27web-stories%2F%22electric+bike%22&rlz=1C1ONGR_enIN990IN990&oq=inurl%3A%27web-stories%2F%22electric+bike%22&aqs=chrome..69i57j69i58.1351j0j7&sourceid=chrome&ie=UTF-8
              shortedUrl: https://url-shortener-rfpt.onrender.com/api/url/9VelUQjTK
        400: 
          description: Bad Request
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string 
            example:
              status: failed
              message: Please provide url
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string 
              error:
                type: string  
            example:
              status: failed
              message: error in shorting the url
              error: some error message 

# Access the shorted url
  /api/url/{url}:
    get:
      tags: [Url]
      summary: This Api is to access the original url using shorted url.
      description: Pass the complete shorted url as params to access the original url

      #Request Body
      parameters:
        - name: url
          in: path     # here path means params
          required: true
          schema: 
            type: string

      #Response Body
      responses:
        200:
          description: Ok
          schema:
            type: text  
            example:
              The result of the url being accessed
        400: 
          description: Bad Request
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string 
            example:
              status: failed
              message: Invalid Url || Please provide url
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string 
              error:
                type: string  
            example:
              status: failed
              message: error in accessing the url
              error: some error message       
             